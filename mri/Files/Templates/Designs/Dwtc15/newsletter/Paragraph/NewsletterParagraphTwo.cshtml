@using System.Text.RegularExpressions

@{
	string sitelink = Pageview.Area.Item["OtherDomain"].ToString();
	
	string imageone = sitelink + "/Admin/Public/GetImage.ashx?width=420&height=237&crop=0&image=" + GetString("Item.Col1Image");
	string imagetwo = sitelink + "/Admin/Public/GetImage.ashx?width=420&height=237&crop=0&image=" + GetString("Item.Col2Image");
	string linkone = GetString("Item.Col1Link");
	string linktwo = GetString("Item.Col2Link");
	
	string btncolor = Pageview.Area.Item["ColorsPrimary"].ToString();
	string headcolor = Pageview.Area.Item["ColorsHeadmenuBackgroundColor"].ToString();
	string bgcolor = GetString("Item.Background");
	string textcolor = "";
	
	if (bgcolor == "none"){
		bgcolor = "#ffffff";
		textcolor = "#1C1C1C";
	} else {
		textcolor = getContrastYIQ(bgcolor);
	}
}

<!-- Two Column -->
<table width="590" border="0" cellpadding="0" cellspacing="0" align="center" class="deviceWidth" bgcolor="@bgcolor">
	<tr>
		<td width="100%" style="padding:10px 0px 0px 5px">
			<table width="49%" border="0" cellpadding="0" cellspacing="0" align="left" class="deviceWidth">
			    <tr>
				<td style="font-size: 13px; color: @textcolor; font-weight: normal; text-align: left; line-height: 24px; vertical-align: top; padding:0px 15px 5px 5px" bgcolor="@bgcolor">		    
				@if (!string.IsNullOrWhiteSpace(GetString("Item.Col1Image"))) {
				      <img  src="@imageone" width="100%" alt="" border="0" class="imageResponsive imagecorner" />
				}
				@if (!string.IsNullOrWhiteSpace(linkone)) {
				      <a href="@linkone" style="text-decoration: none"><h1 style="color: @textcolor !important; line-height: 1 !important; font-size: 18px !important">@GetString("Item.Col1Heading")</h1></a>
				} else {
				      <p style="text-decoration: none; font-size: 18px; color: @textcolor"><h1 style="color: @textcolor !important">@GetString("Item.Col1Heading")</h1></p>		
				}
				<span style="text-decoration: none; font-size: 12px; line-height: 1.5">@StripHtmlTagByCharArray(GetString("Item.Col1Text"))</span>
					
				@if (!string.IsNullOrWhiteSpace(GetString("Item.Col1LinkText"))) {
					<table>
						<tr>
							<td>
								<div style="height:15px">&nbsp;</div><!-- spacer -->
							</td>					
						</tr>
						<tr>
							<td align="center" width="120px" height="22px" bgcolor="@btncolor" style="-webkit-border-radius: 2px; -moz-border-radius: 2px; border-radius: 2px; color: #ffffff; display: block;">
								<a href="@linkone" style="font-size:14px; font-weight: bold; text-decoration: none; line-height:24px; width:100%; display:inline-block">
								<span style="color: #ffffff;">
									@GetString("Item.Col1LinkText")
								</span>
								</a>
							</td>
						</tr>
					</table>
					<div style="height:25px">&nbsp;</div><!-- spacer -->
				}
				</td>
			    </tr>                         
			</table>
						
			<table width="49%" border="0" cellpadding="0" cellspacing="0" align="left" class="deviceWidth">
			    <tr>
				<td style="font-size: 13px; color: @textcolor; font-weight: normal; text-align: left; line-height: 24px; vertical-align: top; padding:0px 5px 5px 5px" bgcolor="@bgcolor">		    
				@if (!string.IsNullOrWhiteSpace(GetString("Item.Col2Image"))) {
				      <img  src="@imagetwo" width="100%" alt="" border="0" class="imageResponsive imagecorner" />
				}
				@if (!string.IsNullOrWhiteSpace(linktwo)) {
				      <a href="@linktwo" style="text-decoration: none"><p style="color: @textcolor"><h1 style="color: @textcolor !important; line-height: 1 !important; font-size: 18px !important">@GetString("Item.Col2Heading")</h1></p></a>
				} else {
				      <p style="text-decoration: none; font-size: 18px; color: @textcolor"><h1 style="color: @textcolor !important">@GetString("Item.Col2Heading")</h1></p>		
				}
				<span style="text-decoration: none; font-size: 12px; line-height: 1 !important">@StripHtmlTagByCharArray(GetString("Item.Col2Text"))</span>
					
				@if (!string.IsNullOrWhiteSpace(GetString("Item.Col2LinkText"))) {
					<table>
						<tr>
							<td>
								<div style="height:15px">&nbsp;</div><!-- spacer -->
							</td>					
						</tr>
						<tr>
							<td align="center" width="120px" height="22px" bgcolor="@btncolor" style="-webkit-border-radius: 2px; -moz-border-radius: 2px; border-radius: 2px; color: #ffffff; display: block;">
								<a href="@linktwo" style="font-size:14px; font-weight: bold; text-decoration: none; line-height:24px; width:100%; display:inline-block">
								<span style="color: #ffffff;">
								  @GetString("Item.Col2LinkText")
								</span>
								</a>
							</td>
						</tr>
					</table>
					<div style="height:25px">&nbsp;</div><!-- spacer -->
				}
				</td>
			    </tr>                         
			</table>                                        
		</td>
	</tr>
	<tr>
		<td>
			<div style="height:15px">&nbsp;</div><!-- spacer -->
		</td>					
	</tr>
	@if (GetBoolean("Item.HorizonalColorLine")){
		<tr>
			<td bgcolor="@headcolor" height="4px"><div style="height:4px !important">&nbsp;</div></td>
		</tr>
	}
</table><!-- End Two Column -->

<div style="height:15px">&nbsp;</div><!-- spacer -->


@functions {
	public static string StripHtmlTagByCharArray(string htmlString)
	{
		char[] array = new char[htmlString.Length];
		int arrayIndex = 0;
		bool inside = false;
	
		for (int i = 0; i < htmlString.Length; i++)
		{
			char let = htmlString[i];
			if (let == '<')
			{
			    inside = true;
			    continue;
			}
			if (let == '>')
			{
			    inside = false;
			    continue;
			}
			if (!inside)
			{
			    array[arrayIndex] = let;
			    arrayIndex++;
			}
		}
		return new string(array, 0, arrayIndex);
	}
}

<!--Color contrast checker-->
@functions {
	private string getContrastYIQ(string hexcolor)
	{
		if (hexcolor != "")
		{
			hexcolor = Regex.Replace(hexcolor, "[^0-9a-zA-Z]+", "");

			int r = Convert.ToByte(hexcolor.Substring(0, 2), 16);
			int g = Convert.ToByte(hexcolor.Substring(2, 2), 16);
			int b = Convert.ToByte(hexcolor.Substring(4, 2), 16);
			int yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;

			if (yiq >= 128)
			{
				return "#272727";
			}
			else
			{
				return "#eee";
			}
		}
		else
		{
			return "black";
		}
	}
}
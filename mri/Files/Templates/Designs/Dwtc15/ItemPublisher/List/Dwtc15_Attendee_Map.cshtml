@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@IncludeFile("../../../lib/razor/functions/functions.cshtml")

@{
    var attendees = GetLoop("ItemPublisher:Items.List");
    var data = new List<dynamic>();

    foreach (var attendee in attendees)
    {
        double? lat = null;
        double? lng = null;
        string companyName = null;
        foreach (var company in attendee.GetLoop("ItemPublisher:Item.Company"))
        {
            if (!string.IsNullOrWhiteSpace(company.GetString("ItemPublisher:Item.Company.Address.Geolocation")))
            {
                lat = company.GetDouble("ItemPublisher:Item.Company.Address.Geolocation.Lat");
                lng = company.GetDouble("ItemPublisher:Item.Company.Address.Geolocation.Lng");
                companyName = company.GetString("ItemPublisher:Item.Company.Name");
            }
            break;
        }

        if (!(lat.HasValue && lng.HasValue) && !string.IsNullOrWhiteSpace(attendee.GetString("ItemPublisher:Item.Address.Geolocation")))
        {
            lat = attendee.GetDouble("ItemPublisher:Item.Address.Geolocation.Lat");
            lng = attendee.GetDouble("ItemPublisher:Item.Address.Geolocation.Lng");
        }

        if (lat.HasValue && lng.HasValue)
        {
            data.Add(new
            {
                title = string.Join("<br/>", new[] { attendee.GetValue("ItemPublisher:Item.Name"), companyName ?? attendee.GetString("ItemPublisher:Item.CompanyName"), attendee.GetValue("ItemPublisher:Item.Address.Country") }),
                lat = lat,
                lng = lng,
            });
        }
    }
}

<div class="attendees map">
    @* https://developers.google.com/maps/documentation/javascript/tutorial *@
    <script src="https://maps.googleapis.com/maps/api/js"></script>
    <script src="http://jawj.github.io/OverlappingMarkerSpiderfier/bin/oms.min.js"></script>
    <script>
        google.maps.event.addDomListener(window, 'load', function () {
            var mapOptions = {
                center: { lat: 0, lng: 0},
                zoom: 2
            },
                mapData = @Newtonsoft.Json.JsonConvert.SerializeObject(data),
                bounds = new google.maps.LatLngBounds(),

            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions),
            oms = new OverlappingMarkerSpiderfier(map, {
                keepSpiderfied: true
            }),
                infoWindow = new google.maps.InfoWindow();

            mapData.forEach(function(data) {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(data.lat, data.lng),
                    title: data.title,
                    map: map
                });
                bounds.extend(marker.getPosition());
                oms.addMarker(marker);
            });

            oms.addListener('click', function(marker, event) {
                infoWindow.setContent(marker.title);
                infoWindow.open(map, marker);
            });

            if (!bounds.isEmpty()) {
                if (!bounds.getNorthEast().equals(bounds.getSouthWest())) {
                    map.fitBounds(bounds);
                } else {
                    map.setCenter(bounds.getCenter());
                }
            }
        });
    </script>


    <div id="map-canvas" style="height: 400px"></div>
</div>

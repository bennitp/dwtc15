@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@IncludeFile("../../../../lib/razor/functions/functions.cshtml")
@IncludeFile("../../../razor/News.cshtml")

<div class="news-list">
    @{
        var newsItems = GetLoop("ItemPublisher:Items.List");

        if (newsItems.Count == 0)
        {
            <div class="alert alert-info">@Translate("No news is good news!")</div>
        }
        else
        {
            foreach (var news in newsItems)
            {
                var url = news.GetValue("ItemPublisher:Item.Url");
                <article class="news">
                    <header>
                        @ShowArchiveInfo(news)

                        <h1>
                            <a href="@url">
                                @news.GetValue("ItemPublisher:Item.Heading")
                            </a>
                        </h1>
                    </header>

                    <div class="excerpt">
                        @GetExcerpt(news.GetString("ItemPublisher:Item.Content"), 80)
                    </div>

                    <div class="read-more">
                        <a href="@url" class="btn btn-primary">@Translate("Read more") &#xBB;</a>
                    </div>

                    @ShowCategories(news, "ItemPublisher:")
                    @*
                            @{
                        //var categories = news.GetLoop("ItemPublisher:Item.Categories.Options").Where(i => i.GetBoolean("ItemPublisher:Item.Categories.Option.IsSelected"));
                        var categories = GetNewsCategories("ItemPublisher:");
                        if (categories.Any())
                        {
                            var mainCategoryPage = GetMostDistantAncestorOrSelfByItemType("Dwtc15_NewsCategory");

                            <div class="categories">
                                @Translate("Categories"):
                                @foreach (var category in categories)
                                {
                                    if (mainCategoryPage != null)
                                    {
                                        url = BuildUrl(new
                                               {
                                                   Id = mainCategoryPage.ID,
                                                   Categories = category.GetValue("ItemPublisher:Item.Categories.Option.Value")
                                               });
                                        <a href="@url" class="category">@category.GetValue("ItemPublisher:Item.Categories.Option.Label")</a>
                                    }
                                    else
                                    {
                                        <span class="category">@category.GetValue("ItemPublisher:Item.Categories.Option.Label")</span>
                                    }
                                }
                            </div>
                        }
                            }
                    *@

                </article>
            }
        }
    }
</div>
